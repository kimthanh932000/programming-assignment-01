Display welcome message
Prompt user to select a difficulty

Endless Loop
    If difficulty is in [E, M, H] // not case-sensitive
        Break out of loop
        
    Print "Invalid choice" message
    Prompt for difficulty
        
Print message confirming the selected difficulty

SET questions to None
SET quantity to None
SET minimum to None
SET maximum to None

IF difficulty is "E"
    SET questions to 2
    SET quantity to 3
    SET minimum to 1
    SET maximum to 5

ELSE IF difficulty is "M"
    SET questions to 4
    SET quantity to 5
    SET minimum to 3
    SET maximum to 12

ELSE
    SET questions to 6
    SET quantity to 8
    SET minimum to 10
    SET maximum to 25

SET score to 0

For each question
    Print question the user is up to out of the total number of questions

    IF the user is not up to the final question
        Generate a list of "quantity" random numbers between "minimum" and "maximum"
        //random_list(quantity, minimum, maximum)

    ELSE
        Print "Challenge questions!" message
        Generate a list of "quantity" random numbers between double the "minimum" and double the "maximum"
        //random_list(quantity, minimum *2, maximum *2)
        
    
    Generate a random number between 1 and 4
    //random.randint(1, 4)

    IF number = 1
        Print "What is the smallest number in this list?" and display list of numbers generated by "random_list()"
        Prompt for answer
        
        //The "min()" function can be used to determine the correct answer
        //Convert the user’s input to an integer so that you can properly compare it to the correct answer.


        IF answer is correct
            Print "Correct!" message
            SET score to score + 1

        ELSE
            Print "Incorrec!t" and the correct answer


    ELSE IF number = 2
        Print "What is the biggest number in this list?" and display list of numbers generated by "random_list()"

        //The "max()" function can be used to determine the correct answer.
        //Convert the user’s input to an integer so that you can properly compare it to the correct answer.

        IF answer is correct
            Print "Correct!" message
            SET score to score + 1

        ELSE
            Print "Incorrec!t" and the correct answer

    ELSE IF number = 3
        Print "What is the sum of the numbers in this list?" and display list of numbers generated by "random_list()"

        //The "sum()" function can be used to determine the correct answer.
        //Convert the user’s input to an integer so that you can properly compare it to the correct answer.

        IF answer is correct
            Print "Correct!" message
            SET score to score + 1

        ELSE
            Print "Incorrec!t" and the correct answer

    ELSE
         Print "What is the average of the numbers in this list?", followed by list of numbers generated by "random_list()" and "round UP to nearest integer" message

        //The "sum()", "len()" and “math.ceil()” functions are likely to be useful.
        //Convert the user’s input to an integer so that you can properly compare it to the correct answer.

        IF answer is correct
            Print "Correct!" message
            SET score to score + 1

        ELSE
            Print "Incorrec!t" and the correct answer
        
Print "Test complete!" message, followed by the "score" out of questions and the percentage that represent the score
//Round the percentage to 1 decimal place.

IF score = questions
    Print "Perfect score, well done!" message

********************************
random_list()

//The definition of the function should be at the start of the program,

Define "random_list" function (receives "quaniy", "minimum" and "maximum")
    //There are various ways to achieve this, but most approaches are is
    //likely to involve a list, a for loop, and the "random.randint()" function
    
    Set "result" to an empty list
    
    Repeat 5 times
        Generate a random number between "minimum" and "maximum"
        Add number to "result"
    
    Return "result"











